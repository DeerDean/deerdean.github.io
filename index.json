[{"categories":null,"contents":"TBD\n","date":"2022-05-30T12:16:10+08:00","permalink":"https://deerdean.github.io/about/","section":"","tags":null,"title":"About"},{"categories":["记录"],"contents":"觉得有必要搭建一下blog，记录一下自己的一些学习笔记。没有写网页的基础，又觉得租服务器和域名备案太麻烦了，所以选择了高校低成本的方法：github pages + 静态网站 的方式。 然后在Hexo、Jekyll和Hugo中纠结了一番，虽然github pages自带Jekyll，但相比之下，Hugo的社区群体更大，也拥有更多的主题，因此就选择了使用Hugo来搭建。 Hugo是用Golang写的，因此它生成网站的速度也更快一些。\n安装Hugo 这部分可以直接参考Hugo官网的Doc。\n快速搭建 安装完Hugo后，可以通过一下命令快速创建网站项目\nhugo new site my_blog 然后就会在当前路径下生成名为my_blog的文件夹以及内部基础的文件。接下来就需要为你的网站设置一个主题。\n选择主题 前面说到Hugo的主题很多，都可以在它的官网上找到。 我选的主题是He Yeshuang分享的Tokiwa。 主题的设置也很简单，以Tokwa为例，首先把主题的源码clone到项目根目录下的theme文件夹中\ncd my_blog git submodule add https://github.com/heyeshuang/hugo-theme-tokiwa.git themes/hugo-theme-tokiwa 然后，修改根目录下的config.toml文件，在里面加上一句\ntheme = \u0026#34;hugo-theme-tokiwa\u0026#34; 随后便会找到theme/文件夹下同名的主题并应用。\n或者，通常主题源码被clone下来后，会带有配置示例，一般会放在theme/xxx/exampleSite文件夹下，把里面的文件复制到网站根目录下替换原有文件即可。\n然后我们可以在根目录下执行\nhugo server 然后通过http://localhost:1313/，来查看网站大概长什么样。\n部署到GitHub Pages 首先创建 xxx.github.io 的repo（参考官网）。 随后在config.toml文件中添加\nbaseURL = \u0026#34;https://xxxxx.github.io/\u0026#34; 来制定网站域名，执行\nhugo 生成静态网站资源，然根目录下会生成新的文件夹public/，我们将这个文件夹和我们的 pages repo 链接\ncd public git init git add . git commit -m\u0026#34;blog init\u0026#34; git remote add origin https://github.com/xxx/xxx.github.io.git git branch -M main git push origin main Github pages生效需要一些时间，等一会就可以通过https://xxx.github.io来访问自己的博客了。\n发布文章 通过以下名来生成新的文件\nhugo new post/20220530BuildBlog.md 并通过修改markdown文件的头部内容来为文章添加tags和分类，以及其他的一些属性\n--- title: \u0026#34;搭建 Hugo + Github Pages 博客\u0026#34; date: 2022-05-30T08:51:20+08:00 draft: true description: \u0026#34;记录一下如何构建Hugo博客\u0026#34; tags: [\u0026#34;Blog\u0026#34;, \u0026#34;Hugo\u0026#34;] categories: [\u0026#34;记录\u0026#34;] toc: true --- 文章完成后就可以通过hugo命令来生成网站，再把public/更新到GitHub上。（记得把文章的draft属性设置为false)\n添加评论模块 Tokiwa用的是Hugo内置的Disqus模块，但在国内感觉这个用起来不太方便， 就找了个平替，基于Github issue search API的utterances，可有通过Github账号来进行评论 配置起来也特别方便，安装utterances github app，然后配置可以直接选择我们xxxx.github.io的repo， 这样的话之后关于我们文章的评论都会以issue的形式存储在这个仓库中。\n然后就是要把这个模块添加到我们的site中，首先我们要找到我们希望放置评论模块的位置，我们文章的页面是通过模版生成的，所以需要修改统一的模板， 还是以Tokiwa为例，Tokiwa评论的模板位置放在themes/hugo-theme-tokiwa/layouts/partials/page-footer.html， 可以看到最下面有\n\u0026lt;div class=\u0026#34;pb-2\u0026#34;\u0026gt;  {{ template \u0026#34;_internal/disqus.html\u0026#34; . }} \u0026lt;/div\u0026gt; 这是使用了Hugo的内置模板，我们需要做的就是替换掉这部分，首先我们创建一个新的文件themes/hugo-theme-tokiwa/layouts/partials/utterances.html\n\u0026lt;script src=\u0026#34;https://utteranc.es/client.js\u0026#34;  repo=\u0026#34;xxx/xxx.github.io\u0026#34;  issue-term=\u0026#34;pathname\u0026#34;  theme=\u0026#34;github-light\u0026#34;  crossorigin=\u0026#34;anonymous\u0026#34;  async\u0026gt; \u0026lt;/script\u0026gt; 这部分代码utterances主页上有根据不同需求生成，记得替换其中的repo即刻，然后我们把刚刚footer中的模板替换掉就可以了。\n\u0026lt;div class=\u0026#34;pb-2\u0026#34;\u0026gt;  {{ partial \u0026#34;utterances.html\u0026#34; . }} \u0026lt;/div\u0026gt; 其他主题也是差不多，效果就像下面一样了。\n","date":"2022-05-30T08:51:20+08:00","permalink":"https://deerdean.github.io/post/20220530buildblog/","section":"post","tags":["Blog","Hugo"],"title":"搭建 Hugo + Github Pages 博客"},{"categories":null,"contents":"","date":"2022-05-30T00:00:00Z","permalink":"https://deerdean.github.io/archives/","section":"","tags":null,"title":""}]